services:
  postgres:
    image: postgres:17-alpine3.21
    container_name: f2f-db
    restart: always
    environment:
      POSTGRES_USER: f2fadmin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "f2fadmin", "-d", "database" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./schema_dump.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./data_dump.sql:/docker-entrypoint-initdb.d/02_data.sql
    ports:
      - "5432:5432"
    networks:
      - my_network

  app:
    container_name: f2f-app
    restart: always
    build:
      context: ../
      dockerfile: DockerfileApp
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/database
      SPRING_DATASOURCE_USERNAME: f2fadmin
      SPRING_DATASOURCE_PASSWORD: password
      OAUTH2_GOOGLE_REDIRECT_URL: https://localhost/auth/google/callback
      OAUTH2_GITHUB_REDIRECT_URL: https://localhost/auth/github/callback
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my_network

  nginx:
    build:
      context: ..
      dockerfile: docker-f2f/DockerfileNginx
    container_name: f2f-nginx
    restart: always
    ports:
      - "443:443"
    depends_on:
      - app
    networks:
      - my_network
    volumes:
      - ./food2food.pl.crt:/etc/cert/food2food.pl.crt
      - ./food2food.pl.key:/etc/cert/food2food.pl.key
      - ./nginx.conf:/etc/nginx/nginx.conf


networks:
  my_network: